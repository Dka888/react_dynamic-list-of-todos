{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","openModal","reset","useState","selectedId","setSelectedId","className","map","todo","cn","id","completed","title","type","onClick","handleClickEyeButton","TodoFilter","handleSelect","searchQuery","inputValue","setInputValue","onChange","event","target","value","selected","placeholder","e","word","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","todoModal","resetTodoModal","todoWithUser","setTodoWithUser","useEffect","loadUser","a","userId","userData","user","href","email","name","App","setTodos","setTodoModal","selectCompleted","setSelectCompleted","query","setQuery","loadGoods","goodsData","filteredTodos","useMemo","newTodo","filter","Boolean","queryTrimed","trim","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b14bc7e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface PropsTodoList {\n  todos: Todo[];\n  openModal(todo: Todo): void;\n  reset: Todo | null;\n}\n\nexport const TodoList: React.FC<PropsTodoList> = ({\n  todos,\n  openModal,\n  reset,\n}) => {\n  const [selectedId, setSelectedId] = useState(0);\n\n  const handleClickEyeButton = (todo: Todo) => {\n    setSelectedId(todo.id);\n\n    openModal(todo);\n  };\n\n  if (selectedId !== 0 && reset === null) {\n    setSelectedId(0);\n  }\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={\n              cn({ 'has-background-info-light': selectedId === todo.id })\n            }\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className={cn({\n                  'fas fa-check': todo.completed,\n                })}\n                />\n              </span>\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn({\n                'has-text-success': todo.completed,\n                'has-text-danger': !todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleClickEyeButton(todo)}\n              >\n                <span\n                  className=\"icon\"\n                >\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n        {/* <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">1</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">delectus aut autem</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n      <tr data-cy=\"todo\" className=\"has-background-info-light\">\n        <td className=\"is-vcentered\">2</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">quis ut nam facilis et officia qui</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye-slash\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">1</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">delectus aut autem</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">6</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">\n            qui ullam ratione quibusdam voluptatem quia omnis\n          </p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr> */}\n      </tbody>\n    </table>\n  );\n};\n","import { useState } from 'react';\n\ninterface PropsTodoFilter {\n  handleSelect(e: string): void;\n  searchQuery(word: string) : void;\n}\n\nexport const TodoFilter = ({ handleSelect, searchQuery }: PropsTodoFilter) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleQuery = (word: string) => {\n    searchQuery(word);\n    setInputValue(word);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => handleSelect(event.target.value)}\n          >\n            <option value=\"all\" selected>All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={(e) => handleQuery(e.target.value)}\n          value={inputValue}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\n// import { Loader } from '../Loader';\nimport { Todo, TodoWithUser } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\n\ninterface PropsTodoModal {\n  todoModal: Todo;\n  resetTodoModal(reset: null): void;\n}\n\nexport const TodoModal: React.FC<PropsTodoModal> = ({\n  todoModal,\n  resetTodoModal,\n}) => {\n  const [todoWithUser, setTodoWithUser] = useState<TodoWithUser | null>(null);\n\n  const handleClose = () => {\n    setTodoWithUser(null);\n\n    resetTodoModal(null);\n  };\n\n  useEffect(() => {\n    const { id, title, completed } = todoModal;\n\n    const loadUser = async () => {\n      const userData = await getUser(todoModal.userId);\n\n      setTodoWithUser({\n        id, title, completed, user: userData,\n      });\n    };\n\n    loadUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {todoWithUser === null ? (<Loader />)\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todoWithUser?.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={handleClose}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {todoWithUser?.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {todoWithUser?.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href={todoWithUser?.user ? todoWithUser.user.email : ''}>\n                  {todoWithUser?.user && todoWithUser.user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todoModal, setTodoModal] = useState<Todo | null>(null);\n  const [selectCompleted, setSelectCompleted] = useState('');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    const loadGoods = async () => {\n      const goodsData = await getTodos();\n\n      setTodos(goodsData);\n    };\n\n    loadGoods();\n  }, [todos]);\n\n  const openModal = (todo: Todo) => {\n    setTodoModal(todo);\n  };\n\n  const resetTodoModal = (reset: null) => {\n    setTodoModal(reset);\n  };\n\n  const handleSelect = (e: string) => {\n    setSelectCompleted(e);\n  };\n\n  const searchQuery = (word: string) => {\n    setQuery(word);\n  };\n\n  const filteredTodos = useMemo(() => {\n    let newTodo = todos;\n\n    if (selectCompleted === 'active') {\n      newTodo = newTodo.filter(todo => !todo.completed);\n    }\n\n    if (selectCompleted === 'completed') {\n      newTodo = newTodo.filter(todo => Boolean(todo.completed));\n    }\n\n    const queryTrimed = query.trim();\n\n    if (query) {\n      newTodo = newTodo.filter(todo => todo.title.includes(queryTrimed));\n    }\n\n    return newTodo;\n  }, [todos, selectCompleted, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                handleSelect={handleSelect}\n                searchQuery={searchQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length && <Loader />}\n              <TodoList\n                todos={filteredTodos}\n                openModal={openModal}\n                reset={todoModal}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {todoModal !== null && <TodoModal todoModal={todoModal} resetTodoModal={resetTodoModal} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}